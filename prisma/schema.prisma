// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Company {
    id String @id @default(uuid())

    name String

    cnpj String @unique

    password String

    logo String? @db.LongText

    isActive Boolean

    users Users[]

    clockin ClockIn[]

    session CompanySession[]

    createdAt DateTime  @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@map("company")
}

model Users {
    id String @id @default(uuid())

    cpf String @unique

    name String

    password String

    hourly Boolean

    clockin ClockIn[]

    isActive Boolean

    phone String?

    email String?

    session UserSession[]

    createdAt DateTime @default(now())

    updatedAt DateTime @updatedAt @default(now())

    company Company @relation(fields: [CompanyId], references: [id], onDelete: Cascade)
    CompanyId String

    @@map("users")
}

model ClockIn {
    id String @id @default(uuid())

    user Users @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    userName String?

    company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
    companyId String

    companyName String

    time String?

    ip String?

    location String? @db.LongText

    obs String?

    type String?

    updatedAt DateTime @updatedAt @default(now())

    createdAt DateTime @default(now())

    @@map("clockin")
}

// Necessary for Next auth

model UserSession {
    id           String   @id @default(cuid())

    sessionToken String   @unique

    userId       String

    expires      DateTime

    user         Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CompanySession {
    id           String   @id @default(cuid())

    sessionToken String   @unique

    companyId       String

    expires      DateTime

    company         Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
}
